initSidebarItems({"enum":[["Artifact","The artifact type"],["ArtifactAttribute","Artifact attribute type."],["ArtifactId","Artifact identifier type."],["ArtifactTag","Artifact tags is used to select an artifact subtype when we do not have Artifact/ArtifactId/ArtifactAttribute. For example, when lookup quota or filters."],["CertificationMessageAttribute","The certification message attribute used by the priority function."],["Priority","Priority of artifact."]],"struct":[["Advert","A helper type that represents a type-indexed Advert."],["ArtifactFilter","A collection of \"filters\" used by the gossip protocol for each kind of artifact pools. At the moment it only has consensus filter. Note that it is a struct instead of an enum, because we most likely are interested in all filters."],["ArtifactTagIter",""],["CertificationMessageFilter","Certification message filter is by height."],["CertificationMessageId","Certification message identifier carries both message hash and a height, which is used by the certification pool to help lookup."],["ConsensusMessageFilter","Consensus message filter is by height."],["ConsensusMessageId","Consensus message identifier carries both an message hash and a height, which is used by the consensus pool to help lookup."],["DkgMessageAttribute",""],["IngressMessageAttribute","Dummy definition of ingress message attribute for now."],["IngressMessageId","[`IngressMessageId`] includes expiry time in addition to [`MessageId`]."],["PriorityIter",""],["SignedIngress","Describes the signed ingress message that was received from the end user. To construct a `SignedIngress`, either use `TryFrom<SignedRequestBytes>` or directly deserialize from bytes. This guarantees that the correct byte sequence is remembered as part of `SignedIngress`, which will always serialize to the same sequence."],["StateSyncArtifactId","Identifier of a state sync artifact."],["StateSyncAttribute","State sync atrribute."],["StateSyncFilter","State sync filter is by height."],["StateSyncMessage","State sync message."]],"trait":[["ArtifactKind","Related artifact sub-types (Message/Id/Attribute/Filter) are parameterized by a type variable, which is of `ArtifactKind` trait. It is mostly a convenience to pass around a collection of types instead of all of them individually."]],"type":[["ArtifactPriorityFn","Wraps individual `PriorityFn`s, used by `ArtifactManager`."],["DkgMessageId","Identifier of a DKG message."],["FileTreeSyncAttribute","File tree sync attribute."],["IngressMessageFilter","Ingress messages are filtered by their expiry time."],["PriorityFn","Priority function used by `ArtifactClient`."]]});