initSidebarItems({"enum":[["AlgorithmId","An algorithm ID. This is used to specify the signature algorithm associated with a public key."],["CryptoError","An error returned by the crypto component."],["KeyPurpose","A purpose of a key. This is used for storing and retrieving keys from the registry."],["PublicKey","A public key."]],"mod":[["dkg","Defines interactive distributed key generation (DKG) types."],["error","Defines crypto error types."],["threshold_sig","Defines threshold signature types."]],"struct":[["AlgorithmIdIter",""],["BasicSig","A basic signature."],["CanisterSig","A canister signature (ICCSA)."],["CombinedMultiSig","A combined multi-signature."],["CombinedThresholdSig","A combined threshold signature."],["CommitteeMemberPublicKey","A public key of a committee member."],["CryptoHash","A cryptographic hash."],["IcpPublicKey","An ICP public key."],["IndividualMultiSig","An individual multi-signature."],["KeyId","An id of a key. These ids are used to refer to entries in the crypto secret key store."],["KeyPurposeIter",""],["NodePublicKey","A public key of an IC node."],["Signed","Signed contains the signed content and its signature."],["ThresholdSigShare","A threshold signature share."],["UserPublicKey","A public key of a user interacting with the IC."]],"trait":[["SignedBytesWithoutDomainSeparator","Signed bytes, not containing a domain separator. Also refer to the doc of `SignedBytesWithoutDomainSeparator:: as_signed_bytes_without_domain_separator`."]],"type":[["BasicSigOf","A basic signature for content of type `T`"],["CanisterSigOf","A canister signature for content of type `T`"],["CombinedMultiSigOf","A combined multi-signature for content of type `T`"],["CombinedThresholdSigOf","A combined threshold signature for content of type `T`"],["CryptoHashOf","A cryptographic hash for content of type `T`"],["CryptoResult","A `Result` with an error of type `CryptoError`."],["IndividualMultiSigOf","An individual multi-signature for content of type `T`"],["ThresholdSigShareOf","A threshold signature share for content of type `T`"]]});