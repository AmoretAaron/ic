initSidebarItems({"fn":[["candid","this is a private mirror of the type in dfn_core::api which generates the serialization/deserialization for it without putting a dependency on candid in dfn_core This is a bit of a weird type witness. Candid is multi arity in both inputs and outputs the outputs don't fit in well with rust. To make writing candid nicer we assume that every function is going to try and return one value, if you'd actually prefer to return multiple use candid_multi_arity."],["candid_multi_arity","This type witness will force the function to return a tuple of arguments"],["candid_one","This is a candid function that takes one argument and returns another"],["decode_args","Decode a series of arguments, represented as a tuple. There is a maximum of 16 arguments supported."],["encode_args","Serialize an encoding of a tuple to a vector of bytes."],["encode_one","Serialize a single value to a vector of bytes."]],"struct":[["Candid",""],["CandidOne",""]],"trait":[["ArgumentDecoder","Allow decoding of any sized argument."],["ArgumentEncoder","Allow encoding of any serializable value."]]});