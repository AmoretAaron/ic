initSidebarItems({"constant":[["ZERO_REGISTRY_VERSION","The registry at version `0` is the empty registry."]],"enum":[["DataProviderConfig",""],["RegistryClientError","Errors returned by the registry client."],["RegistryDataProviderError","Errors returned by the registry data provider."]],"fn":[["create_data_provider","Instantiate a data provider from a `DataProviderConfig`. In case of `DataProviderConfig::Bootstrap` and `DataProviderConfig::RegistryCanisterUrl`, a corresponding `ThresholdSigPublicKey` can be provided to verify certified updates provided by the registry canister."],["empty_zero_registry_record",""]],"struct":[["EmptyRegistryDataProvider","An empty registry data provider that emulates a static, empty registry."],["RegistryClientImpl",""],["ThresholdSigPublicKey","A threshold signature public key."]],"trait":[["RegistryClient","The RegistryClient provides methods to query the local state of the registry. All methods on this trait return immediately (i.e. there are no side-effects on the critical path)."],["RegistryDataProvider","A `RegistryDataProvider` is the data source that backs the `RegistryClient`, i.e. the registry client uses an instances of this trait to get data from the registry. In production, this trait will be instantiated by an implementation that queries the registry canister on the NNS. For testing and local deployment, this can be instantiated with an implementation that reads from a local file, e.g."]],"type":[["RegistryClientVersionedResult","Result returns when fetching a versioned value from the registry."],["RegistryTransportRecord","A RegistryRecord represents a versioned k/v-pair as stored in the registry canister. TODO(IC-102): This needs to be renamed to `RegistryRecord` after we removed the legacy `RegistryRecord`."],["RegistryVersion","A type representing the registry's version."]]});