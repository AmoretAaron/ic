initSidebarItems({"fn":[["combined_threshold_signature_and_public_key","Creates a combined threshold signature together with its public key. This is only used for testing."],["generate_dkg_dealing_encryption_keys","Generates (forward-secure) NI-DKG dealing encryption key material given the `node_id` of the node."],["generate_initial_dkg_encryption_keys","Generates initial DKG ephemeral encryption keys for the `dkg_config` and the `node_id`. * The secret key is stored in the crypto secret key store at the   `crypto_root`. * The corresponding public key is returned * If the crypto root does not exist yet, it is created and the appropriate   permissions are set."],["get_node_keys_or_generate_if_missing","Obtains the node keys or generates them if they are missing."],["get_node_keys_or_generate_if_missing_for_node_id","Obtains the node keys or generates them for the given `node_id` if they are missing."]],"mod":[["dkg","Utilities for interactive Distributed Key Generation (DKG)."],["ni_dkg","Utilities for non-interactive Distributed Key Generation (NI-DKG)."]],"struct":[["NodeKeysToGenerate","Selects which keys should be generated for a `TempCryptoComponent`."]],"type":[["TempCryptoComponent","A crypto component set up in a temporary directory. The directory is automatically deleted when this component goes out of scope."]]});