initSidebarItems({"enum":[["NeuronState","Every neuron is in one of three states."],["NnsFunction","List of NNS functions that can be called by proposals."],["ProposalRewardStatus","The proposal status, with respect to reward distribution. See also ProposalStatus."],["ProposalStatus","The proposal status, with respect to decision making and execution. See also ProposalRewardStatus."],["Topic","Proposal types are organized into topics. Neurons can automatically vote based on following other neurons, and these follow relationships are defined per topic."],["Vote","The types of votes the Neuron can issue."]],"mod":[["add_or_remove_node_provider","Nested message and enum types in `AddOrRemoveNodeProvider`."],["governance","Nested message and enum types in `Governance`."],["governance_error","Nested message and enum types in `GovernanceError`."],["manage_neuron","Nested message and enum types in `ManageNeuron`."],["manage_neuron_response","Nested message and enum types in `ManageNeuronResponse`."],["neuron","Nested message and enum types in `Neuron`."],["proposal","Nested message and enum types in `Proposal`."],["reward_node_provider","Nested message and enum types in `RewardNodeProvider`."]],"struct":[["AddOrRemoveNodeProvider","Adds and/or removes NodeProviders from the list of current node providers."],["ApproveGenesisKyc","For all Neurons controlled by the given principals, set their KYC status to `kyc_verified=true`."],["Ballot",""],["BallotInfo","How did a neuron vote in the recent past? This data is used by other neurons to determine what neurons to follow."],["ExecuteNnsFunction","Payload of a proposal that calls a function on another NNS canister. The canister and function to call is derived from the `nns_function`."],["Governance","This represents the whole NNS governance system. It contains all information about the NNS governance system that must be kept across upgrades of the NNS governance system."],["GovernanceError",""],["ListNeurons","A request to list neurons. The \"requested list\", i.e., the list of neuron IDs to retrieve information about, is the union of the list of neurons listed in `neuron_ids` and, if `caller_neurons` is true, the list of neuron IDs of neurons for which the caller is the controller or one of the hot keys."],["ListNeuronsResponse","A response to a `ListNeurons` request."],["ListProposalInfo","Proposals with restricted voting are not included unless the caller is allowed to vote on them."],["ListProposalInfoResponse",""],["ManageNeuron","All operations that modify the state of an existing neuron are represented by instances of `ManageNeuron`."],["ManageNeuronResponse","The response of the ManageNeuron command"],["Motion","If adopted, a motion should guide the future strategy of the Internet Computer ecosystem."],["NetworkEconomics","Network economics contains the parameters for several operations related to the economy of the network. When submitting a NetworkEconomics proposal default values (0) are considered unchanged, so a valid proposal only needs to set the parameters that it wishes to change. In other words, it's not possible to set any of the values of NetworkEconomics to 0."],["Neuron","This structure represents a neuron \"at rest\" in governance system of the Internet Computer IC."],["NeuronInfo","The result of querying for the state of a single neuron."],["NeuronStakeTransfer","A transfer performed from some account to stake a new neuron."],["NodeProvider","The entity that owns the nodes that run the network."],["Proposal","A proposal is the immutable input of a proposal submission. This contains all the information from the original proposal submission."],["ProposalData","A ProposalData contains everything related to an open proposal: the proposal itself (immutable), as well as mutable data such as ballots."],["ProposalInfo","This is a view of the ProposalData returned by API queries and is NOT used for storage. The ballots are restricted to those of the caller's neurons and additionally it has the computed fields, topic, status, and reward_status."],["RewardEvent","A reward event is an event at which neuron maturity is increased"],["RewardNodeProvider","This proposal payload is used to reward a node provider by minting ICPTs directly to the node provider's ledger account, or into a new neuron created on behalf of the node provider."],["SetDefaultFollowees","Changes the default followees to match the one provided. This completely replaces the default followees so entries for all Topics (except ManageNeuron) must be provided on each proposal."],["Tally","A tally of votes."]]});