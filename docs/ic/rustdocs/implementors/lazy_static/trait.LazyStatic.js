(function() {var implementors = {};
implementors["ic_nns_constants"] = [{"text":"impl <a class=\"trait\" href=\"https://docs.rs/lazy_static/1.4.0/lazy_static/trait.LazyStatic.html\" title=\"trait lazy_static::LazyStatic\">LazyStatic</a> for <a class=\"struct\" href=\"ic_nns_constants/ids/struct.TEST_NEURON_1_OWNER_KEYPAIR.html\" title=\"struct ic_nns_constants::ids::TEST_NEURON_1_OWNER_KEYPAIR\">TEST_NEURON_1_OWNER_KEYPAIR</a>","synthetic":false,"types":["ic_nns_constants::ids::TEST_NEURON_1_OWNER_KEYPAIR"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/lazy_static/1.4.0/lazy_static/trait.LazyStatic.html\" title=\"trait lazy_static::LazyStatic\">LazyStatic</a> for <a class=\"struct\" href=\"ic_nns_constants/ids/struct.TEST_NEURON_1_OWNER_PUBKEY.html\" title=\"struct ic_nns_constants::ids::TEST_NEURON_1_OWNER_PUBKEY\">TEST_NEURON_1_OWNER_PUBKEY</a>","synthetic":false,"types":["ic_nns_constants::ids::TEST_NEURON_1_OWNER_PUBKEY"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/lazy_static/1.4.0/lazy_static/trait.LazyStatic.html\" title=\"trait lazy_static::LazyStatic\">LazyStatic</a> for <a class=\"struct\" href=\"ic_nns_constants/ids/struct.TEST_NEURON_1_OWNER_PRINCIPAL.html\" title=\"struct ic_nns_constants::ids::TEST_NEURON_1_OWNER_PRINCIPAL\">TEST_NEURON_1_OWNER_PRINCIPAL</a>","synthetic":false,"types":["ic_nns_constants::ids::TEST_NEURON_1_OWNER_PRINCIPAL"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/lazy_static/1.4.0/lazy_static/trait.LazyStatic.html\" title=\"trait lazy_static::LazyStatic\">LazyStatic</a> for <a class=\"struct\" href=\"ic_nns_constants/ids/struct.TEST_NEURON_2_OWNER_KEYPAIR.html\" title=\"struct ic_nns_constants::ids::TEST_NEURON_2_OWNER_KEYPAIR\">TEST_NEURON_2_OWNER_KEYPAIR</a>","synthetic":false,"types":["ic_nns_constants::ids::TEST_NEURON_2_OWNER_KEYPAIR"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/lazy_static/1.4.0/lazy_static/trait.LazyStatic.html\" title=\"trait lazy_static::LazyStatic\">LazyStatic</a> for <a class=\"struct\" href=\"ic_nns_constants/ids/struct.TEST_NEURON_2_OWNER_PUBKEY.html\" title=\"struct ic_nns_constants::ids::TEST_NEURON_2_OWNER_PUBKEY\">TEST_NEURON_2_OWNER_PUBKEY</a>","synthetic":false,"types":["ic_nns_constants::ids::TEST_NEURON_2_OWNER_PUBKEY"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/lazy_static/1.4.0/lazy_static/trait.LazyStatic.html\" title=\"trait lazy_static::LazyStatic\">LazyStatic</a> for <a class=\"struct\" href=\"ic_nns_constants/ids/struct.TEST_NEURON_2_OWNER_PRINCIPAL.html\" title=\"struct ic_nns_constants::ids::TEST_NEURON_2_OWNER_PRINCIPAL\">TEST_NEURON_2_OWNER_PRINCIPAL</a>","synthetic":false,"types":["ic_nns_constants::ids::TEST_NEURON_2_OWNER_PRINCIPAL"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/lazy_static/1.4.0/lazy_static/trait.LazyStatic.html\" title=\"trait lazy_static::LazyStatic\">LazyStatic</a> for <a class=\"struct\" href=\"ic_nns_constants/ids/struct.TEST_NEURON_3_OWNER_KEYPAIR.html\" title=\"struct ic_nns_constants::ids::TEST_NEURON_3_OWNER_KEYPAIR\">TEST_NEURON_3_OWNER_KEYPAIR</a>","synthetic":false,"types":["ic_nns_constants::ids::TEST_NEURON_3_OWNER_KEYPAIR"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/lazy_static/1.4.0/lazy_static/trait.LazyStatic.html\" title=\"trait lazy_static::LazyStatic\">LazyStatic</a> for <a class=\"struct\" href=\"ic_nns_constants/ids/struct.TEST_NEURON_3_OWNER_PUBKEY.html\" title=\"struct ic_nns_constants::ids::TEST_NEURON_3_OWNER_PUBKEY\">TEST_NEURON_3_OWNER_PUBKEY</a>","synthetic":false,"types":["ic_nns_constants::ids::TEST_NEURON_3_OWNER_PUBKEY"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/lazy_static/1.4.0/lazy_static/trait.LazyStatic.html\" title=\"trait lazy_static::LazyStatic\">LazyStatic</a> for <a class=\"struct\" href=\"ic_nns_constants/ids/struct.TEST_NEURON_3_OWNER_PRINCIPAL.html\" title=\"struct ic_nns_constants::ids::TEST_NEURON_3_OWNER_PRINCIPAL\">TEST_NEURON_3_OWNER_PRINCIPAL</a>","synthetic":false,"types":["ic_nns_constants::ids::TEST_NEURON_3_OWNER_PRINCIPAL"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/lazy_static/1.4.0/lazy_static/trait.LazyStatic.html\" title=\"trait lazy_static::LazyStatic\">LazyStatic</a> for <a class=\"struct\" href=\"ic_nns_constants/ids/struct.TEST_USER1_KEYPAIR.html\" title=\"struct ic_nns_constants::ids::TEST_USER1_KEYPAIR\">TEST_USER1_KEYPAIR</a>","synthetic":false,"types":["ic_nns_constants::ids::TEST_USER1_KEYPAIR"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/lazy_static/1.4.0/lazy_static/trait.LazyStatic.html\" title=\"trait lazy_static::LazyStatic\">LazyStatic</a> for <a class=\"struct\" href=\"ic_nns_constants/ids/struct.TEST_USER1_PUBKEY.html\" title=\"struct ic_nns_constants::ids::TEST_USER1_PUBKEY\">TEST_USER1_PUBKEY</a>","synthetic":false,"types":["ic_nns_constants::ids::TEST_USER1_PUBKEY"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/lazy_static/1.4.0/lazy_static/trait.LazyStatic.html\" title=\"trait lazy_static::LazyStatic\">LazyStatic</a> for <a class=\"struct\" href=\"ic_nns_constants/ids/struct.TEST_USER1_PRINCIPAL.html\" title=\"struct ic_nns_constants::ids::TEST_USER1_PRINCIPAL\">TEST_USER1_PRINCIPAL</a>","synthetic":false,"types":["ic_nns_constants::ids::TEST_USER1_PRINCIPAL"]}];
implementors["ic_sys"] = [{"text":"impl <a class=\"trait\" href=\"https://docs.rs/lazy_static/1.4.0/lazy_static/trait.LazyStatic.html\" title=\"trait lazy_static::LazyStatic\">LazyStatic</a> for <a class=\"struct\" href=\"ic_sys/struct.PAGE_SIZE.html\" title=\"struct ic_sys::PAGE_SIZE\">PAGE_SIZE</a>","synthetic":false,"types":["ic_sys::PAGE_SIZE"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/lazy_static/1.4.0/lazy_static/trait.LazyStatic.html\" title=\"trait lazy_static::LazyStatic\">LazyStatic</a> for <a class=\"struct\" href=\"ic_sys/struct.IS_WSL.html\" title=\"struct ic_sys::IS_WSL\">IS_WSL</a>","synthetic":false,"types":["ic_sys::IS_WSL"]}];
implementors["ledger_archive_node_canister"] = [{"text":"impl <a class=\"trait\" href=\"https://docs.rs/lazy_static/1.4.0/lazy_static/trait.LazyStatic.html\" title=\"trait lazy_static::LazyStatic\">LazyStatic</a> for <a class=\"struct\" href=\"ledger_archive_node_canister/struct.ARCHIVE_STATE.html\" title=\"struct ledger_archive_node_canister::ARCHIVE_STATE\">ARCHIVE_STATE</a>","synthetic":false,"types":["ledger_archive_node_canister::ARCHIVE_STATE"]}];
implementors["ledger_canister"] = [{"text":"impl <a class=\"trait\" href=\"https://docs.rs/lazy_static/1.4.0/lazy_static/trait.LazyStatic.html\" title=\"trait lazy_static::LazyStatic\">LazyStatic</a> for <a class=\"struct\" href=\"ledger_canister/struct.LEDGER.html\" title=\"struct ledger_canister::LEDGER\">LEDGER</a>","synthetic":false,"types":["ledger_canister::LEDGER"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/lazy_static/1.4.0/lazy_static/trait.LazyStatic.html\" title=\"trait lazy_static::LazyStatic\">LazyStatic</a> for <a class=\"struct\" href=\"ledger_canister/struct.MAX_MESSAGE_SIZE_BYTES.html\" title=\"struct ledger_canister::MAX_MESSAGE_SIZE_BYTES\">MAX_MESSAGE_SIZE_BYTES</a>","synthetic":false,"types":["ledger_canister::MAX_MESSAGE_SIZE_BYTES"]}];
implementors["test_notified"] = [{"text":"impl <a class=\"trait\" href=\"https://docs.rs/lazy_static/1.4.0/lazy_static/trait.LazyStatic.html\" title=\"trait lazy_static::LazyStatic\">LazyStatic</a> for <a class=\"struct\" href=\"test_notified/struct.COUNTER.html\" title=\"struct test_notified::COUNTER\">COUNTER</a>","synthetic":false,"types":["test_notified::COUNTER"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/lazy_static/1.4.0/lazy_static/trait.LazyStatic.html\" title=\"trait lazy_static::LazyStatic\">LazyStatic</a> for <a class=\"struct\" href=\"test_notified/struct.DIRTY_LOCK.html\" title=\"struct test_notified::DIRTY_LOCK\">DIRTY_LOCK</a>","synthetic":false,"types":["test_notified::DIRTY_LOCK"]},{"text":"impl <a class=\"trait\" href=\"https://docs.rs/lazy_static/1.4.0/lazy_static/trait.LazyStatic.html\" title=\"trait lazy_static::LazyStatic\">LazyStatic</a> for <a class=\"struct\" href=\"test_notified/struct.CLEAN_LOCK.html\" title=\"struct test_notified::CLEAN_LOCK\">CLEAN_LOCK</a>","synthetic":false,"types":["test_notified::CLEAN_LOCK"]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()